package com.springboot.app.gateway.security;

import org.springframework.security.authentication.ReactiveAuthenticationManager;
import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;

import reactor.core.publisher.Mono;

//CLASE113: CLASE DE UN ADMINISTRADOR DE AUTENTICACIÓN
//1.1.-EL MÉTODO DEVLEVE UN FLUJO Y CONTIENE UN ELEMENTO "Authentication", Y RECIVE POR PARÁMENTRO RECIBE OTRO Authentication QUE DEBE CONTENER EL TOKEN. Y ES ESTE Authentication QUE CONTIENE AL TOKEN, EL QUE SE PASA POR EL FILTRO. 
//1.2.-just(): CONVIERTE  A UN OBJ NORMAL EN UN OBJETO REACTIVO.
	//Mono.just(authentication.getCredentials().toString()) : SE OBTIENE EL TOKEN "authentication.getCredentials()" Y SE PASA A STRING "toString()".
	//map(): LUEGO DE PROCESA EL TOKEN Y SE OBTIENEN LOS CLAIMS. LOS CLAIMS ES LA INFORMACIÓN QUE CONTIENE EL TOKEN PARA LA AUTENTICACIÓN.


@Component
public class AuthenticationManagerJwt implements ReactiveAuthenticationManager{

	//1.1
	@Override
	public Mono<Authentication> authenticate(Authentication authentication) {
		// TODO Auto-generated method stub
		return Mono.just(authentication.getCredentials().toString())
				.map(token->{
					
				});
	}

}
